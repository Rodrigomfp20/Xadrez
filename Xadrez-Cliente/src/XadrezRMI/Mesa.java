package XadrezRMI;

import java.awt.BorderLayout;
import java.awt.GridLayout;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author raulm
 */
public class Mesa extends javax.swing.JFrame {

    private InterfaceJogo refServidor;
    private Cliente cliente;

    /**
     * Creates new form Mesa
     */
    public Mesa(InterfaceJogo refServidor, Cliente cliente) {
        this.refServidor = refServidor;
        this.cliente = cliente;
        initComponents();
    }

    public Mesa() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        chessBoard = new ChessGUI(this);
        nome1 = new javax.swing.JLabel();
        nome2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        chat = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        mensagem = new javax.swing.JTextField();
        observar = new javax.swing.JButton();
        arrumarPecas = new javax.swing.JButton();
        removerPecas = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        pecasBrancas = new TabelaGUI(0,this);
        pecasPretas = new TabelaGUI(1,this);
        jScrollPane5 = new javax.swing.JScrollPane();
        observadores = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1140, 700));
        setResizable(false);
        setSize(new java.awt.Dimension(1140, 700));

        chessBoard.setBackground(new java.awt.Color(255, 255, 30));
        chessBoard.setPreferredSize(new java.awt.Dimension(380, 380));

        javax.swing.GroupLayout chessBoardLayout = new javax.swing.GroupLayout(chessBoard);
        chessBoard.setLayout(chessBoardLayout);
        chessBoardLayout.setHorizontalGroup(
            chessBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 380, Short.MAX_VALUE)
        );
        chessBoardLayout.setVerticalGroup(
            chessBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 380, Short.MAX_VALUE)
        );

        nome1.setText("Posicao1");
        nome1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nome1MouseClicked(evt);
            }
        });

        nome2.setText("Posicao2");
        nome2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nome2MouseClicked(evt);
            }
        });

        chat.setColumns(20);
        chat.setRows(5);
        chat.setFocusable(false);
        jScrollPane2.setViewportView(chat);

        jLabel4.setText("Chat");

        jButton1.setText("Enviar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        observar.setLabel("Passar a Observador");
        observar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                observarActionPerformed(evt);
            }
        });

        arrumarPecas.setLabel("Arrumar Pecas");
        arrumarPecas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arrumarPecasActionPerformed(evt);
            }
        });

        removerPecas.setLabel("Remover Todas as Pecas");
        removerPecas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerPecasActionPerformed(evt);
            }
        });

        jButton5.setLabel("Sair do Jogo");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        pecasBrancas.setPreferredSize(new java.awt.Dimension(100, 100));

        javax.swing.GroupLayout pecasBrancasLayout = new javax.swing.GroupLayout(pecasBrancas);
        pecasBrancas.setLayout(pecasBrancasLayout);
        pecasBrancasLayout.setHorizontalGroup(
            pecasBrancasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 380, Short.MAX_VALUE)
        );
        pecasBrancasLayout.setVerticalGroup(
            pecasBrancasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        pecasPretas.setPreferredSize(new java.awt.Dimension(100, 100));

        javax.swing.GroupLayout pecasPretasLayout = new javax.swing.GroupLayout(pecasPretas);
        pecasPretas.setLayout(pecasPretasLayout);
        pecasPretasLayout.setHorizontalGroup(
            pecasPretasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 380, Short.MAX_VALUE)
        );
        pecasPretasLayout.setVerticalGroup(
            pecasPretasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        observadores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Observadores"
            }
        ));
        jScrollPane5.setViewportView(observadores);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(observar, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(chessBoard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pecasBrancas, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pecasPretas, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(arrumarPecas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removerPecas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(nome2)
                        .addGap(21, 21, 21))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(nome1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(mensagem, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(observar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(mensagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton1))
                                .addGap(11, 11, 11)))
                        .addGap(75, 75, 75))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(pecasPretas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nome2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addComponent(chessBoard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nome1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pecasBrancas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(arrumarPecas)
                            .addComponent(removerPecas)
                            .addComponent(jButton5))
                        .addGap(15, 15, 15))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void arrumarPecasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arrumarPecasActionPerformed
        // TODO add your handling code here:
        this.organizaPecas();
    }//GEN-LAST:event_arrumarPecasActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String mensagem = this.mensagem.getText();
        if (!mensagem.isBlank()) {
            try {
                refServidor.enviarMensagem(mensagem,cliente.getNomeUtilizador());
            } catch (RemoteException ex) {
                Logger.getLogger(Mesa.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.mensagem.setText("");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void removerPecasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerPecasActionPerformed
        // TODO add your handling code here:
        this.limpaTabuleiro();
    }//GEN-LAST:event_removerPecasActionPerformed

    private void observarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_observarActionPerformed
        // TODO add your handling code here:
        if (this.cliente.getTipo() != 3) {
            if (this.cliente.getTipo() == 1) {
                try {
                    refServidor.atualizaPosicao(1, 3, this.cliente.getNomeUtilizador());
                } catch (RemoteException ex) {
                    Logger.getLogger(Mesa.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                try {
                    refServidor.atualizaPosicao(2, 3, this.cliente.getNomeUtilizador());
                } catch (RemoteException ex) {
                    Logger.getLogger(Mesa.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            this.cliente.setTipo(3);
        }
    }//GEN-LAST:event_observarActionPerformed

    private void nome2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nome2MouseClicked
        // TODO add your handling code here:
        if (this.nome2.getText().equals("Posicao2")) {
            if (this.cliente.getTipo() == 3) {
                try {
                    refServidor.atualizaPosicao(3, 2, this.cliente.getNomeUtilizador());
                } catch (RemoteException ex) {
                    Logger.getLogger(Mesa.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                try {
                    refServidor.atualizaPosicao(1, 2, this.cliente.getNomeUtilizador());
                } catch (RemoteException ex) {
                    Logger.getLogger(Mesa.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            this.cliente.setTipo(2);

        }
    }//GEN-LAST:event_nome2MouseClicked

    private void nome1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nome1MouseClicked
        // TODO add your handling code here:
        if (this.nome1.getText().equals("Posicao1")) {
            this.nome1.setText(this.cliente.getNomeUtilizador());
            if (this.cliente.getTipo() == 3) {
                try {
                    refServidor.atualizaPosicao(3, 1, this.cliente.getNomeUtilizador());
                } catch (RemoteException ex) {
                    Logger.getLogger(Mesa.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                try {
                    refServidor.atualizaPosicao(2, 1, this.cliente.getNomeUtilizador());
                } catch (RemoteException ex) {
                    Logger.getLogger(Mesa.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            this.cliente.setTipo(1);

        }
    }//GEN-LAST:event_nome1MouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            // TODO add your handling code here:
            refServidor.removerCliente(cliente.getNomeUtilizador());
            
            System.exit(0);
        } catch (RemoteException ex) {
            Logger.getLogger(Mesa.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    public void setNome1(String nome) {
        this.nome1.setText(nome);
    }

    public void setNome2(String nome) {
        this.nome2.setText(nome);
    }

    public void addObservador(String nome) {
        DefaultTableModel model = (DefaultTableModel) this.observadores.getModel();
        model.addRow(new Object[]{nome});
    }

    public void removerObservador(String nome) {
        DefaultTableModel model = (DefaultTableModel) this.observadores.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            if (String.valueOf(model.getValueAt(i, 0)).equals(nome)) {
                model.removeRow(i);
            }
        }
    }

    public void setPecas(int inicialX, int inicialY, int finalX, int finalY, int tipo, int cor) {
        chessBoard.moverPecaLocal(inicialX, inicialY, finalX, finalY, tipo, cor);
    }

    public InterfaceJogo getRefServidor() {
        return this.refServidor;
    }

    public void removePecaFora(int cor, int row, int column) {
        if (cor == 1) {
            pecasPretas.removerPeca(row, column);
            System.out.println("coluna: " + row + "linha -> " + column);
        } else {
            System.out.println("coluna: " + row + "linha -> " + column);
            pecasBrancas.removerPeca(row, column);
        }

    }

    public void removePecaDentro(int row, int column) {
        chessBoard.removerPeca(row, column);
    }

    public ArrayList<Peca> getPecasBrancas() {
        return pecasPretas.getBoard();
    }

    public ArrayList<Peca> getPecasPretas() {
        return pecasBrancas.getBoard();
    }

    public ArrayList<Peca> getPiecesPosition() {
        return chessBoard.getBoard();
    }

    public void setPiecesPosition(ArrayList<Peca> pecas) {
        chessBoard.setBoard(pecas);
    }

    public void setPecasFora(ArrayList<Peca> pecasBrancas, ArrayList<Peca> pecasPretas) {
        this.pecasPretas.setBoard(pecasBrancas);
        this.pecasBrancas.setBoard(pecasPretas);
    }

    public void organizaPecas() {
        chessBoard.organizaPecas();
        pecasPretas.limpaTabuleiro();
        pecasBrancas.limpaTabuleiro();
        chessBoard.atualizaServidor("Normal","Organizado");
    }

    ;
public void limpaTabuleiro() {
        chessBoard.limpaTabuleiro();
        pecasPretas.organizaPecas(1);
        pecasBrancas.organizaPecas(0);
        chessBoard.atualizaServidor("Normal","Limpo");
    }

    public void adicionaPecaFora(int cor, int tipo) {
        if (cor == 1) {
            pecasPretas.adicionaPeca(-1, -1, cor, tipo);
        } else {
            pecasBrancas.adicionaPeca(-1, -1, cor, tipo);
        }
    }

    public void setPlayable(boolean estado) {
        this.chessBoard.setPlayable(estado);
        this.arrumarPecas.setEnabled(estado);
        this.removerPecas.setEnabled(estado);
        this.observar.setEnabled(estado);
    }

    public void escreveMensagem(String mensagem) {
        this.chat.append(mensagem + "\n");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton arrumarPecas;
    private javax.swing.JTextArea chat;
    private ChessGUI chessBoard;/*
    private javax.swing.JPanel chessBoard;
    */
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField mensagem;
    private javax.swing.JLabel nome1;
    private javax.swing.JLabel nome2;
    private javax.swing.JTable observadores;
    private javax.swing.JButton observar;
    /*
    private javax.swing.JPanel pecasBrancas;
    */
    private TabelaGUI pecasBrancas;
    /*
    private javax.swing.JPanel pecasPretas;
    */
    private TabelaGUI pecasPretas;
    private javax.swing.JButton removerPecas;
    // End of variables declaration//GEN-END:variables
}
